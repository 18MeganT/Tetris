#BlueJ class context
comment0.params=
comment0.target=Block()
comment0.text=\n\ Constructs\ a\ blue\ block.\n
comment1.params=
comment1.target=java.awt.Color\ getColor()
comment1.text=\n\ Gets\ the\ color\ of\ this\ block.\n\ \n\ @return\ the\ color\ of\ this\ block\n
comment10.params=loc
comment10.target=boolean\ checkLeft(Location)
comment10.text=\n\ Checks\ the\ location\ to\ the\ left\ of\ a\ certain\ location\ \n\ with\ a\ block,\ and\ if\ the\ location\ is\ valid\ and\ contains\ a\ block,\n\ check\ if\ the\ block\ is\ the\ same\ color.\ \n\ \n\ @param\ \ loc\ a\ Location\n\ @return\ true\ if\ the\ block\ to\ the\ left\ is\ the\ same\ color\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ otherwise,\ false\n
comment11.params=loc
comment11.target=boolean\ checkAllLeft(Location)
comment11.text=\n\ Keeps\ checking\ the\ locations\ to\ the\ left\ of\ a\ certain\ location\ \n\ as\ long\ as\ those\ locations\ have\ a\ block\ of\ the\ same\ color\ as\ the\n\ block\ on\ the\ current\ location.\ Checks\ there\ is\ an\ anchor\ beneath\ \n\ at\ least\ one\ of\ these\ locations.\n\ \n\ @param\ \ loc\ a\ Location\n\ @return\ true\ if\ at\ least\ one\ block\ of\ the\ same\ color\ to\ the\ left\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ has\ an\ anchor\ beneath\ it;\ otherwise,\ false\n
comment12.params=loc
comment12.target=boolean\ checkRight(Location)
comment12.text=\n\ Check\ the\ location\ to\ the\ right\ of\ a\ certain\ location\ \n\ with\ a\ block,\ and\ if\ the\ location\ is\ valid\ and\ contains\ a\ block,\n\ check\ if\ the\ block\ is\ the\ same\ color.\ \n\ \n\ @param\ \ loc\ a\ Location\n\ @return\ true\ if\ the\ block\ to\ the\ right\ is\ the\ same\ color\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ otherwise,\ false\n
comment13.params=loc
comment13.target=boolean\ checkAllRight(Location)
comment13.text=\n\ Keeps\ checking\ the\ locations\ to\ the\ right\ of\ a\ certain\ location\ \n\ as\ long\ as\ those\ locations\ have\ a\ block\ of\ the\ same\ color\ as\ the\n\ block\ on\ the\ current\ location.\ Checks\ there\ is\ an\ anchor\ beneath\ \n\ at\ least\ one\ of\ these\ locations.\n\ \n\ @param\ \ loc\ a\ Location\n\ @return\ true\ if\ at\ least\ one\ block\ of\ the\ same\ color\ to\ the\ right\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ has\ an\ anchor\ beneath\ it;\ otherwise,\ false\n
comment14.params=loc
comment14.target=boolean\ isAnchorBelow(Location)
comment14.text=\n\ Checks\ if\ there\ is\ a\ block\ just\ below\ a\ block\ at\ a\ certain\ location\n\ \n\ @precondition\ there\ is\ a\ block\ at\ location\ l\n\ @param\ \ loc\ a\ location\ with\ a\ block\n\ @return\ true\ if\ there\ is\ a\ block\ of\ a\ different\ color\ (acts\n\ \ \ \ \ \ \ \ \ like\ an\ anchor)\ below\ the\ block\ at\ location\ l;\ otherwise,\n\ \ \ \ \ \ \ \ \ false\n\ \ \ \ \ \ \ \ \ \n
comment15.params=loc
comment15.target=boolean\ sideBySideTest(Location)
comment15.text=\n\ If\ the\ block\ to\ the\ left\ or\ the\ right\ that\ is\ the\ same\ \n\ color\ as\ the\ current\ block\ is\ anchored,\ then\ the\ current\ \n\ block\ is\ also\ anchored\n\ \n\ @param\ \ loc\ a\ location\ with\ a\ block\n\ @return\ true\ if\ the\ block\ is\ anchored;\ otherwise,\n\ \ \ \ \ \ \ \ \ false\n\ \ \ \ \ \ \ \ \ \n
comment2.params=newColor
comment2.target=void\ setColor(java.awt.Color)
comment2.text=\n\ Sets\ the\ color\ of\ this\ block\ to\ newColor.\n\ \n\ @param\ newColor\ \ the\ new\ color\ of\ this\ block\n
comment3.params=
comment3.target=MyBoundedGrid\ getGrid()
comment3.text=\n\ Gets\ the\ grid\ of\ this\ block,\ or\ null\ if\ this\ block\ is\ not\ contained\n\ in\ a\ grid.\n\ \n\ @return\ the\ grid\n
comment4.params=
comment4.target=Location\ getLocation()
comment4.text=\n\ Gets\ the\ location\ of\ this\ block,\ or\ null\ if\ this\ block\ is\ not\ contained\n\ in\ a\ grid.\n\ \n\ @return\ this\ block's\ location,\ or\ null\ if\ this\ block\ is\ not\ in\ the\ grid\n
comment5.params=
comment5.target=void\ removeSelfFromGrid()
comment5.text=\n\ Removes\ this\ block\ from\ its\ grid.\n\n\ @precondition\ \ this\ block\ is\ contained\ in\ a\ grid\n
comment6.params=gr\ loc
comment6.target=void\ putSelfInGrid(MyBoundedGrid,\ Location)
comment6.text=\n\ Puts\ this\ block\ into\ location\ loc\ of\ grid\ gr.\n\ If\ there\ is\ another\ block\ at\ loc,\ it\ is\ removed.\n\ \n\ @precondition\ \ (1)\ this\ block\ is\ not\ contained\ in\ a\ grid\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (2)\ loc\ is\ valid\ in\ gr\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \n\ @param\ gr\ \ the\ grid\ to\ place\ this\ block\n\ @param\ loc\ the\ location\ to\ place\ this\ block\n
comment7.params=newLocation
comment7.target=void\ moveTo(Location)
comment7.text=\n\ Moves\ this\ block\ to\ newLocation.\n\ If\ there\ is\ another\ block\ at\ newLocation,\ it\ is\ removed.\n\n\ @precondition\ \ (1)\ this\ block\ is\ contained\ in\ a\ grid\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (2)\ newLocation\ is\ valid\ in\ the\ grid\ of\ this\ block\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \n\ @param\ newLocation\ \ the\ location\ that\ the\ block\ is\ to\ be\ moved\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\n\ Returns\ a\ string\ with\ the\ location\ and\ color\ of\ this\ block.\n\ \n\ @return\ location\ and\ color\ information\ about\ the\ block\n
comment9.params=
comment9.target=boolean\ isAnchored()
comment9.text=\n\ Determines\ whether\ a\ block\ is\ anchored\n\ \n\ @precondition\ there\ is\ no\ block\ occupying\ the\ location\ below\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ current\ block's\ location\n\ @return\ true\ if\ the\ block\ is\ connected\ to\ other\ blocks\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ preventing\ it\ from\ falling;\ otherwise,\ false\n\ \ \ \ \ \ \ \ \ \n
numComments=16
