#BlueJ class context
comment0.params=grid\ choice
comment0.target=Tetrad(MyBoundedGrid,\ int)
comment0.text=\n\ Constructor\ for\ objects\ of\ class\ Tetrad\n\ \n\ @param\ grid\ the\ MyBoundedGrid<Block>\ that\ Tetris\ takes\ place\ on.\n\ @param\ choice\ an\ int\ that\ determines\ which\ tetrad\ will\ spawn\n
comment1.params=grid
comment1.target=Tetrad(MyBoundedGrid)
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ Tetrad\n\ \n\ @param\ grid\ the\ MyBoundedGrid<Block>\ that\ Tetris\ takes\ place\ on.\n
comment2.params=locs
comment2.target=boolean\ notOverlapping(Location[])
comment2.text=\n\ Determines\ whether\ the\ new\ tetrad\ will\ overlap\ with\ other\ blocks.\n\ \n\ @param\ \ locs\ the\ array\ of\ locations\ that\ the\ tetrad\ will\ occupy\n\ @return\ true\ if\ all\ the\ elements\ at\ the\ locations\ in\ locs\ are\ null\ before\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ tetrad\ is\ added\ to\ the\ grid;\ otherwise,\n\ \ \ \ \ \ \ \ \ false\n
comment3.params=
comment3.target=boolean\ getHasLost()
comment3.text=\n\ Returns\ the\ value\ of\ hasLost\n\ \n\ @return\ true\ if\ hasLost\ is\ true;\ otherwise,\n\ \ \ \ \ \ \ \ \ false\n
comment4.params=grid\ locs
comment4.target=void\ addToLocations(MyBoundedGrid,\ Location[])
comment4.text=\n\ Adds\ the\ blocks\ of\ a\ tetrad\ to\ certain\ locations.\n\ \n\ @param\ \ grid\ the\ grid\ on\ which\ tetris\ is\ played\n\ @param\ \ locs\ an\ array\ of\ locations\ where\ each\ block\ is\ placed.\n
comment5.params=
comment5.target=Location[]\ removeBlocks()
comment5.text=\n\ Removes\ the\ tetrad\ blocks\ from\ the\ grid\ and\ returns\ the\ lcoations\n\ where\ the\ blocks\ were.\n\ \n\ @precondition\ the\ tetrad\ blocks\ are\ in\ the\ grid\n\ @return\ an\ array\ of\ Locations\ where\ the\ blocks\ were\n
comment6.params=grid\ locs
comment6.target=boolean\ areEmpty(MyBoundedGrid,\ Location[])
comment6.text=\n\ Determines\ whether\ the\ locations\ in\ locs\ are\n\ valid\ and\ empty\ in\ the\ grid.\n\ \n\ @return\ true\ if\ the\ locations\ in\ locs\ are\ valid\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ and\ empty\ in\ the\ grid;\ otherwise,\n\ \ \ \ \ \ \ \ \ false\n
comment7.params=deltaRow\ deltaCol
comment7.target=boolean\ translate(int,\ int)
comment7.text=\n\ Moves\ the\ tetrad\ a\ certain\ number\ of\ rows\ down\ and\ a\ certain\n\ number\ of\ columns\ to\ the\ right\ as\ long\ as\ the\ new\ positions\ are\n\ valid\ and\ empty.\n\ \n\ @return\ true\ if\ the\ tetrad\ was\ successfully\ translated;\ otherwise,\n\ \ \ \ \ \ \ \ \ false\n\ @param\ deltaRow\ the\ number\ of\ rows\ \ down\n\ @param\ deltaCol\ the\ number\ of\ columns\n
comment8.params=
comment8.target=boolean\ rotate()
comment8.text=\n\ Rotates\ the\ tetrad\ 90\ degrees\ clockwise\ around\ a\ certain\ pivot\ point.\n\ \n\ @precondition\ the\ pivot\ point\ is\ the\ first\ position\ in\ the\ array\ of\ blocks.\n\ @return\ true\ if\ the\ rotation\ is\ successful;\ otherwise,\n\ \ \ \ \ \ \ \ \ false\n
numComments=9
