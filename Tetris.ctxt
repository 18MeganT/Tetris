#BlueJ class context
comment0.params=
comment0.target=Tetris()
comment0.text=\n\ Constructor\ for\ objects\ of\ class\ Tetris\n
comment1.params=
comment1.target=void\ upPressed()
comment1.text=\n\ Rotates\ the\ tetrad\ 90\ degrees\ counterclockwise\ if\ the\n\ new\ locations\ are\ empty\ and\ valid.\n
comment10.params=
comment10.target=void\ clearCompletedRows()
comment10.text=\n\ Clears\ all\ completed\ rows,\ updates\ the\ score\ and\ level.\n
comment11.params=num
comment11.target=void\ updateScoreAndLevel(int)
comment11.text=\n\ Updates\ the\ score\ if\ necessary\ after\ a\ row(s)\ is\ cleared\n\ based\ on\ the\ level.\ Afterwards,\ also\ update\ the\ level\ if\ necessary.\n\ \n\ @param\ num\ the\ number\ of\ rows\ cleared\ after\ one\ move\n\ \n
comment12.params=num
comment12.target=void\ updateName(int)
comment12.text=\n\ Update\ tetrad\ name\ based\ on\ the\ random\ choice\n
comment13.params=
comment13.target=boolean\ dropFloatingBlocks()
comment13.text=\n\ Drops\ down\ any\ floating\ block\ after\ all\ filled\ rows\n\ have\ been\ cleared.\n\ \n\ @return\ true\ if\ there\ are\ any\ floating\ blocks;\ otherwise,\n\ \ \ \ \ \ \ \ \ false\n
comment14.params=
comment14.target=void\ interactWithUser()
comment14.text=\n\ Allow\ the\ user\ to\ decide\ if\ they\ want\ to\ play\ regular\n\ Tetris\ or\ Tetris\ with\ gravity\ variant.\n
comment2.params=
comment2.target=void\ downPressed()
comment2.text=\n\ Moves\ the\ tetrad\ one\ space\ down\ if\ the\ new\ locations\ \n\ are\ empty\ and\ valid.\n
comment3.params=
comment3.target=void\ leftPressed()
comment3.text=\n\ Moves\ the\ tetrad\ one\ space\ to\ the\ left\ if\ the\ new\ locations\n\ are\ empty\ and\ valid.\n
comment4.params=
comment4.target=void\ rightPressed()
comment4.text=\n\ Moves\ the\ tetrad\ one\ space\ to\ the\ right\ if\ the\ new\ locations\n\ are\ empty\ and\ valid.\n
comment5.params=
comment5.target=void\ spacePressed()
comment5.text=\n\ Moves\ the\ tetrad\ as\ far\ down\ as\ possible.\n
comment6.params=
comment6.target=void\ play()
comment6.text=\n\ Repeatedly\ pauses\ for\ 1\ second,\ moves\ the\ active\ tetrad\ down,\ and\ redraws\n\ the\ display.\ When\ the\ active\ tetrad\ cannot\ be\ shifted\ anymore,\ it\ creates\n\ a\ new\ active\ tetrad\n
comment7.params=
comment7.target=void\ playWithGravity()
comment7.text=\n\ Repeatedly\ pauses\ for\ 1\ second,\ moves\ the\ active\ tetrad\ down,\ and\ redraws\n\ the\ display.\ When\ the\ active\ tetrad\ cannot\ be\ shifted\ anymore,\ it\ creates\n\ a\ new\ active\ tetrad.\ In\ the\ gravity\ variant,\ any\ floating\ blocks\ after\n\ rows\ are\ cleared\ are\ dropped\ \n
comment8.params=row
comment8.target=boolean\ isCompletedRow(int)
comment8.text=\n\ Tests\ whether\ a\ every\ cell\ in\ a\ row\ is\ occupied\n\ \n\ @param\ \ row\ a\ row\ in\ the\ grid\n\ @return\ true\ if\ every\ cell\ in\ a\ row\ is\ occupied;\ otherwise,\n\ \ \ \ \ \ \ \ \ false\n
comment9.params=row
comment9.target=void\ clearRow(int)
comment9.text=\n\ Removes\ a\ row\ and\ moves\ every\ block\ above\ the\ row\ down\ a\ row\n\ \n\ @precondition\ the\ row\ is\ filled\ with\ blocks\ and\ row\ is\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ within\ the\ range\ [0,\ number\ of\ rows)\n\ @param\ row\ the\ row\ that\ is\ removed\n
numComments=15
